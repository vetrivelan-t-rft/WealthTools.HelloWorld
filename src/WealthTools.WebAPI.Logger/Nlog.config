<!--internalLogToTrace="true" throwExceptions="false" internalLogToConsole="true" async="true"-->
<nlog  async="true" throwExceptions="true" internalLogFile="c:\temp\internal_nlog_file.txt" internalLogToTrace="true">
  <extensions>  
    <add assembly="WealthTools.Common.Logger" />
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.WindowsEventLog" />
  </extensions>
  <targets>
    <target name="failover-errorlog" type="FallbackGroup" returnToFirstOnSuccess="false">
      <target name="ErrorLog" type="OracleErrorLog" />
      <!--<target name="eventlog" type="EventLog" source="Application" layout="${level:uppercase=true}|${event-properties:item=logid}|${event-properties:item=logdata}"/>-->
      <target name="file" type="File" fileName="c:\\temp\\NLog.log" layout="${level:uppercase=true}|${event-properties:item=logid}|${event-properties:item=logdata}"/>
    </target>
    <target name="UsageLog" type="OracleUsageLog" />
    

    <!--Uncomment for local Debugging-->
    <!--<target name="console" type="ColoredConsole" layout="${longdate}|${level:uppercase=true}|${machinename}|${logger}|${event-properties:item=tsatoken}|${event-properties:item=brokerid}|${event-properties:item=module}|${event-properties:item=component}|${event-properties:item=action}|${event-properties:item=context}|${event-properties:item=requestid}|${event-properties:item=errorlogid}|${message}|${exception:format=toString,Data:maxInnerExceptionLevel=10}|"/>-->
    <!--<target name="debugger" type="Debugger" layout="${longdate}|${level:uppercase=true}|${machinename}|${logger}|${event-properties:item=tsatoken}|${event-properties:item=brokerid}|${event-properties:item=module}|${event-properties:item=component}|${event-properties:item=action}|${event-properties:item=context}|${event-properties:item=requestid}|${event-properties:item=errorlogid}|${message}|${exception:format=toString,Data:maxInnerExceptionLevel=10}|"/>-->
    <target name="tracefile" type="File" fileName="c:\\temp\\NLogTrace.log" layout="${level:uppercase=true}|${event-properties:item=logid}|${event-properties:item=logdata}"/>
  </targets>
  <rules>
    <logger name="*"  levels="Warn,Error,Fatal" writeTo="failover-errorlog" />
    <logger name="*" level="Trace" writeTo="tracefile" />
    <logger name="*" level="Info" writeTo="UsageLog">
      <filters>
        <when condition="equals('${event-properties:item=brokerid}','999999')" action="Log" />
        <when condition="equals('${event-properties:item=institutionid}','6027')" action="Log" />
      </filters>
    </logger>
    <!--Uncomment for local Debugging-->
    <!--<logger name="*" minlevel="Trace" writeTo="console,debugger" />-->
  </rules>
</nlog>